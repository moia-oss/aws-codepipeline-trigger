"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StageRetryMode = exports.NotLatestPipelineExecutionException = exports.ConflictException = exports.InvalidWebhookFilterPatternException = exports.InvalidWebhookAuthenticationParametersException = exports.OutputVariablesSizeExceededException = exports.FailureType = exports.InvalidJobStateException = exports.InvalidApprovalTokenException = exports.WebhookAuthenticationType = exports.ResourceNotFoundException = exports.InvalidArnException = exports.TriggerType = exports.InvalidNextTokenException = exports.InvalidJobException = exports.StageExecutionStatus = exports.PipelineExecutionNotFoundException = exports.PipelineExecutionStatus = exports.PipelineVersionNotFoundException = exports.StageNotFoundException = exports.PipelineNotFoundException = exports.StageTransitionType = exports.WebhookNotFoundException = exports.PipelineNameInUseException = exports.InvalidStructureException = exports.InvalidStageDeclarationException = exports.InvalidBlockerDeclarationException = exports.InvalidActionDeclarationException = exports.TooManyTagsException = exports.LimitExceededException = exports.InvalidTagsException = exports.ConcurrentModificationException = exports.BlockerType = exports.ArtifactStoreType = exports.EncryptionKeyType = exports.ArtifactLocationType = exports.ApprovalStatus = exports.ApprovalAlreadyCompletedException = exports.ActionTypeNotFoundException = exports.ExecutorType = exports.ActionNotFoundException = exports.ActionExecutionStatus = exports.ActionOwner = exports.ActionConfigurationPropertyType = exports.ActionCategory = exports.InvalidClientTokenException = exports.ValidationException = exports.JobNotFoundException = exports.InvalidNonceException = exports.JobStatus = void 0;
exports.CreateCustomActionTypeInputFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.BlockerDeclarationFilterSensitiveLog = exports.AWSSessionCredentialsFilterSensitiveLog = exports.ArtifactStoreFilterSensitiveLog = exports.EncryptionKeyFilterSensitiveLog = exports.ArtifactRevisionFilterSensitiveLog = exports.ArtifactFilterSensitiveLog = exports.ArtifactLocationFilterSensitiveLog = exports.S3ArtifactLocationFilterSensitiveLog = exports.ApprovalResultFilterSensitiveLog = exports.ActionTypeDeclarationFilterSensitiveLog = exports.ActionTypeUrlsFilterSensitiveLog = exports.ActionTypePropertyFilterSensitiveLog = exports.ActionTypePermissionsFilterSensitiveLog = exports.ActionTypeIdentifierFilterSensitiveLog = exports.ActionTypeExecutorFilterSensitiveLog = exports.ExecutorConfigurationFilterSensitiveLog = exports.LambdaExecutorConfigurationFilterSensitiveLog = exports.JobWorkerExecutorConfigurationFilterSensitiveLog = exports.ActionTypeArtifactDetailsFilterSensitiveLog = exports.ActionTypeFilterSensitiveLog = exports.ActionTypeSettingsFilterSensitiveLog = exports.ArtifactDetailsFilterSensitiveLog = exports.ActionStateFilterSensitiveLog = exports.ActionRevisionFilterSensitiveLog = exports.ActionExecutionFilterFilterSensitiveLog = exports.ActionExecutionDetailFilterSensitiveLog = exports.ActionExecutionOutputFilterSensitiveLog = exports.ActionExecutionResultFilterSensitiveLog = exports.ActionExecutionInputFilterSensitiveLog = exports.ArtifactDetailFilterSensitiveLog = exports.S3LocationFilterSensitiveLog = exports.ActionExecutionFilterSensitiveLog = exports.ErrorDetailsFilterSensitiveLog = exports.ActionDeclarationFilterSensitiveLog = exports.OutputArtifactFilterSensitiveLog = exports.InputArtifactFilterSensitiveLog = exports.ActionTypeIdFilterSensitiveLog = exports.ActionContextFilterSensitiveLog = exports.ActionConfigurationPropertyFilterSensitiveLog = exports.ActionConfigurationFilterSensitiveLog = exports.AcknowledgeThirdPartyJobOutputFilterSensitiveLog = exports.AcknowledgeThirdPartyJobInputFilterSensitiveLog = exports.AcknowledgeJobOutputFilterSensitiveLog = exports.AcknowledgeJobInputFilterSensitiveLog = exports.RequestFailedException = exports.PipelineExecutionNotStoppableException = exports.DuplicatedStopRequestException = exports.StageNotRetryableException = void 0;
exports.ListTagsForResourceInputFilterSensitiveLog = exports.ListPipelinesOutputFilterSensitiveLog = exports.PipelineSummaryFilterSensitiveLog = exports.ListPipelinesInputFilterSensitiveLog = exports.ListPipelineExecutionsOutputFilterSensitiveLog = exports.PipelineExecutionSummaryFilterSensitiveLog = exports.ExecutionTriggerFilterSensitiveLog = exports.StopExecutionTriggerFilterSensitiveLog = exports.SourceRevisionFilterSensitiveLog = exports.ListPipelineExecutionsInputFilterSensitiveLog = exports.ListActionTypesOutputFilterSensitiveLog = exports.ListActionTypesInputFilterSensitiveLog = exports.ListActionExecutionsOutputFilterSensitiveLog = exports.ListActionExecutionsInputFilterSensitiveLog = exports.GetThirdPartyJobDetailsOutputFilterSensitiveLog = exports.ThirdPartyJobDetailsFilterSensitiveLog = exports.ThirdPartyJobDataFilterSensitiveLog = exports.GetThirdPartyJobDetailsInputFilterSensitiveLog = exports.GetPipelineStateOutputFilterSensitiveLog = exports.StageStateFilterSensitiveLog = exports.TransitionStateFilterSensitiveLog = exports.StageExecutionFilterSensitiveLog = exports.GetPipelineStateInputFilterSensitiveLog = exports.GetPipelineExecutionOutputFilterSensitiveLog = exports.PipelineExecutionFilterSensitiveLog = exports.GetPipelineExecutionInputFilterSensitiveLog = exports.GetPipelineOutputFilterSensitiveLog = exports.PipelineMetadataFilterSensitiveLog = exports.GetPipelineInputFilterSensitiveLog = exports.GetJobDetailsOutputFilterSensitiveLog = exports.JobDetailsFilterSensitiveLog = exports.JobDataFilterSensitiveLog = exports.PipelineContextFilterSensitiveLog = exports.StageContextFilterSensitiveLog = exports.GetJobDetailsInputFilterSensitiveLog = exports.GetActionTypeOutputFilterSensitiveLog = exports.GetActionTypeInputFilterSensitiveLog = exports.EnableStageTransitionInputFilterSensitiveLog = exports.DisableStageTransitionInputFilterSensitiveLog = exports.DeregisterWebhookWithThirdPartyOutputFilterSensitiveLog = exports.DeregisterWebhookWithThirdPartyInputFilterSensitiveLog = exports.DeleteWebhookOutputFilterSensitiveLog = exports.DeleteWebhookInputFilterSensitiveLog = exports.DeletePipelineInputFilterSensitiveLog = exports.DeleteCustomActionTypeInputFilterSensitiveLog = exports.CreatePipelineOutputFilterSensitiveLog = exports.CreatePipelineInputFilterSensitiveLog = exports.PipelineDeclarationFilterSensitiveLog = exports.StageDeclarationFilterSensitiveLog = exports.CreateCustomActionTypeOutputFilterSensitiveLog = void 0;
exports.UpdatePipelineOutputFilterSensitiveLog = exports.UpdatePipelineInputFilterSensitiveLog = exports.UpdateActionTypeInputFilterSensitiveLog = exports.UntagResourceOutputFilterSensitiveLog = exports.UntagResourceInputFilterSensitiveLog = exports.TagResourceOutputFilterSensitiveLog = exports.TagResourceInputFilterSensitiveLog = exports.StopPipelineExecutionOutputFilterSensitiveLog = exports.StopPipelineExecutionInputFilterSensitiveLog = exports.StartPipelineExecutionOutputFilterSensitiveLog = exports.StartPipelineExecutionInputFilterSensitiveLog = exports.RetryStageExecutionOutputFilterSensitiveLog = exports.RetryStageExecutionInputFilterSensitiveLog = exports.RegisterWebhookWithThirdPartyOutputFilterSensitiveLog = exports.RegisterWebhookWithThirdPartyInputFilterSensitiveLog = exports.PutWebhookOutputFilterSensitiveLog = exports.PutWebhookInputFilterSensitiveLog = exports.PutThirdPartyJobSuccessResultInputFilterSensitiveLog = exports.PutThirdPartyJobFailureResultInputFilterSensitiveLog = exports.PutJobSuccessResultInputFilterSensitiveLog = exports.ExecutionDetailsFilterSensitiveLog = exports.CurrentRevisionFilterSensitiveLog = exports.PutJobFailureResultInputFilterSensitiveLog = exports.FailureDetailsFilterSensitiveLog = exports.PutApprovalResultOutputFilterSensitiveLog = exports.PutApprovalResultInputFilterSensitiveLog = exports.PutActionRevisionOutputFilterSensitiveLog = exports.PutActionRevisionInputFilterSensitiveLog = exports.PollForThirdPartyJobsOutputFilterSensitiveLog = exports.ThirdPartyJobFilterSensitiveLog = exports.PollForThirdPartyJobsInputFilterSensitiveLog = exports.PollForJobsOutputFilterSensitiveLog = exports.JobFilterSensitiveLog = exports.PollForJobsInputFilterSensitiveLog = exports.ListWebhooksOutputFilterSensitiveLog = exports.ListWebhookItemFilterSensitiveLog = exports.WebhookDefinitionFilterSensitiveLog = exports.WebhookFilterRuleFilterSensitiveLog = exports.WebhookAuthConfigurationFilterSensitiveLog = exports.ListWebhooksInputFilterSensitiveLog = exports.ListTagsForResourceOutputFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const CodePipelineServiceException_1 = require("./CodePipelineServiceException");
var JobStatus;
(function (JobStatus) {
    JobStatus["Created"] = "Created";
    JobStatus["Dispatched"] = "Dispatched";
    JobStatus["Failed"] = "Failed";
    JobStatus["InProgress"] = "InProgress";
    JobStatus["Queued"] = "Queued";
    JobStatus["Succeeded"] = "Succeeded";
    JobStatus["TimedOut"] = "TimedOut";
})(JobStatus = exports.JobStatus || (exports.JobStatus = {}));
class InvalidNonceException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidNonceException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNonceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNonceException.prototype);
    }
}
exports.InvalidNonceException = InvalidNonceException;
class JobNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "JobNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "JobNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, JobNotFoundException.prototype);
    }
}
exports.JobNotFoundException = JobNotFoundException;
class ValidationException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
exports.ValidationException = ValidationException;
class InvalidClientTokenException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidClientTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClientTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClientTokenException.prototype);
    }
}
exports.InvalidClientTokenException = InvalidClientTokenException;
var ActionCategory;
(function (ActionCategory) {
    ActionCategory["Approval"] = "Approval";
    ActionCategory["Build"] = "Build";
    ActionCategory["Deploy"] = "Deploy";
    ActionCategory["Invoke"] = "Invoke";
    ActionCategory["Source"] = "Source";
    ActionCategory["Test"] = "Test";
})(ActionCategory = exports.ActionCategory || (exports.ActionCategory = {}));
var ActionConfigurationPropertyType;
(function (ActionConfigurationPropertyType) {
    ActionConfigurationPropertyType["Boolean"] = "Boolean";
    ActionConfigurationPropertyType["Number"] = "Number";
    ActionConfigurationPropertyType["String"] = "String";
})(ActionConfigurationPropertyType = exports.ActionConfigurationPropertyType || (exports.ActionConfigurationPropertyType = {}));
var ActionOwner;
(function (ActionOwner) {
    ActionOwner["AWS"] = "AWS";
    ActionOwner["Custom"] = "Custom";
    ActionOwner["ThirdParty"] = "ThirdParty";
})(ActionOwner = exports.ActionOwner || (exports.ActionOwner = {}));
var ActionExecutionStatus;
(function (ActionExecutionStatus) {
    ActionExecutionStatus["Abandoned"] = "Abandoned";
    ActionExecutionStatus["Failed"] = "Failed";
    ActionExecutionStatus["InProgress"] = "InProgress";
    ActionExecutionStatus["Succeeded"] = "Succeeded";
})(ActionExecutionStatus = exports.ActionExecutionStatus || (exports.ActionExecutionStatus = {}));
class ActionNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ActionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ActionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActionNotFoundException.prototype);
    }
}
exports.ActionNotFoundException = ActionNotFoundException;
var ExecutorType;
(function (ExecutorType) {
    ExecutorType["JobWorker"] = "JobWorker";
    ExecutorType["Lambda"] = "Lambda";
})(ExecutorType = exports.ExecutorType || (exports.ExecutorType = {}));
class ActionTypeNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ActionTypeNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ActionTypeNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActionTypeNotFoundException.prototype);
    }
}
exports.ActionTypeNotFoundException = ActionTypeNotFoundException;
class ApprovalAlreadyCompletedException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ApprovalAlreadyCompletedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ApprovalAlreadyCompletedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ApprovalAlreadyCompletedException.prototype);
    }
}
exports.ApprovalAlreadyCompletedException = ApprovalAlreadyCompletedException;
var ApprovalStatus;
(function (ApprovalStatus) {
    ApprovalStatus["Approved"] = "Approved";
    ApprovalStatus["Rejected"] = "Rejected";
})(ApprovalStatus = exports.ApprovalStatus || (exports.ApprovalStatus = {}));
var ArtifactLocationType;
(function (ArtifactLocationType) {
    ArtifactLocationType["S3"] = "S3";
})(ArtifactLocationType = exports.ArtifactLocationType || (exports.ArtifactLocationType = {}));
var EncryptionKeyType;
(function (EncryptionKeyType) {
    EncryptionKeyType["KMS"] = "KMS";
})(EncryptionKeyType = exports.EncryptionKeyType || (exports.EncryptionKeyType = {}));
var ArtifactStoreType;
(function (ArtifactStoreType) {
    ArtifactStoreType["S3"] = "S3";
})(ArtifactStoreType = exports.ArtifactStoreType || (exports.ArtifactStoreType = {}));
var BlockerType;
(function (BlockerType) {
    BlockerType["Schedule"] = "Schedule";
})(BlockerType = exports.BlockerType || (exports.BlockerType = {}));
class ConcurrentModificationException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
    }
}
exports.ConcurrentModificationException = ConcurrentModificationException;
class InvalidTagsException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagsException.prototype);
    }
}
exports.InvalidTagsException = InvalidTagsException;
class LimitExceededException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class TooManyTagsException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
    }
}
exports.TooManyTagsException = TooManyTagsException;
class InvalidActionDeclarationException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidActionDeclarationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidActionDeclarationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidActionDeclarationException.prototype);
    }
}
exports.InvalidActionDeclarationException = InvalidActionDeclarationException;
class InvalidBlockerDeclarationException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidBlockerDeclarationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidBlockerDeclarationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidBlockerDeclarationException.prototype);
    }
}
exports.InvalidBlockerDeclarationException = InvalidBlockerDeclarationException;
class InvalidStageDeclarationException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidStageDeclarationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStageDeclarationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStageDeclarationException.prototype);
    }
}
exports.InvalidStageDeclarationException = InvalidStageDeclarationException;
class InvalidStructureException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidStructureException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStructureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStructureException.prototype);
    }
}
exports.InvalidStructureException = InvalidStructureException;
class PipelineNameInUseException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "PipelineNameInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineNameInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineNameInUseException.prototype);
    }
}
exports.PipelineNameInUseException = PipelineNameInUseException;
class WebhookNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "WebhookNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "WebhookNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WebhookNotFoundException.prototype);
    }
}
exports.WebhookNotFoundException = WebhookNotFoundException;
var StageTransitionType;
(function (StageTransitionType) {
    StageTransitionType["Inbound"] = "Inbound";
    StageTransitionType["Outbound"] = "Outbound";
})(StageTransitionType = exports.StageTransitionType || (exports.StageTransitionType = {}));
class PipelineNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "PipelineNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineNotFoundException.prototype);
    }
}
exports.PipelineNotFoundException = PipelineNotFoundException;
class StageNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "StageNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "StageNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StageNotFoundException.prototype);
    }
}
exports.StageNotFoundException = StageNotFoundException;
class PipelineVersionNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "PipelineVersionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineVersionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineVersionNotFoundException.prototype);
    }
}
exports.PipelineVersionNotFoundException = PipelineVersionNotFoundException;
var PipelineExecutionStatus;
(function (PipelineExecutionStatus) {
    PipelineExecutionStatus["Cancelled"] = "Cancelled";
    PipelineExecutionStatus["Failed"] = "Failed";
    PipelineExecutionStatus["InProgress"] = "InProgress";
    PipelineExecutionStatus["Stopped"] = "Stopped";
    PipelineExecutionStatus["Stopping"] = "Stopping";
    PipelineExecutionStatus["Succeeded"] = "Succeeded";
    PipelineExecutionStatus["Superseded"] = "Superseded";
})(PipelineExecutionStatus = exports.PipelineExecutionStatus || (exports.PipelineExecutionStatus = {}));
class PipelineExecutionNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "PipelineExecutionNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineExecutionNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineExecutionNotFoundException.prototype);
    }
}
exports.PipelineExecutionNotFoundException = PipelineExecutionNotFoundException;
var StageExecutionStatus;
(function (StageExecutionStatus) {
    StageExecutionStatus["Cancelled"] = "Cancelled";
    StageExecutionStatus["Failed"] = "Failed";
    StageExecutionStatus["InProgress"] = "InProgress";
    StageExecutionStatus["Stopped"] = "Stopped";
    StageExecutionStatus["Stopping"] = "Stopping";
    StageExecutionStatus["Succeeded"] = "Succeeded";
})(StageExecutionStatus = exports.StageExecutionStatus || (exports.StageExecutionStatus = {}));
class InvalidJobException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidJobException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidJobException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidJobException.prototype);
    }
}
exports.InvalidJobException = InvalidJobException;
class InvalidNextTokenException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidNextTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);
    }
}
exports.InvalidNextTokenException = InvalidNextTokenException;
var TriggerType;
(function (TriggerType) {
    TriggerType["CloudWatchEvent"] = "CloudWatchEvent";
    TriggerType["CreatePipeline"] = "CreatePipeline";
    TriggerType["PollForSourceChanges"] = "PollForSourceChanges";
    TriggerType["PutActionRevision"] = "PutActionRevision";
    TriggerType["StartPipelineExecution"] = "StartPipelineExecution";
    TriggerType["Webhook"] = "Webhook";
})(TriggerType = exports.TriggerType || (exports.TriggerType = {}));
class InvalidArnException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidArnException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArnException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArnException.prototype);
    }
}
exports.InvalidArnException = InvalidArnException;
class ResourceNotFoundException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
var WebhookAuthenticationType;
(function (WebhookAuthenticationType) {
    WebhookAuthenticationType["GITHUB_HMAC"] = "GITHUB_HMAC";
    WebhookAuthenticationType["IP"] = "IP";
    WebhookAuthenticationType["UNAUTHENTICATED"] = "UNAUTHENTICATED";
})(WebhookAuthenticationType = exports.WebhookAuthenticationType || (exports.WebhookAuthenticationType = {}));
class InvalidApprovalTokenException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidApprovalTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidApprovalTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidApprovalTokenException.prototype);
    }
}
exports.InvalidApprovalTokenException = InvalidApprovalTokenException;
class InvalidJobStateException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidJobStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidJobStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidJobStateException.prototype);
    }
}
exports.InvalidJobStateException = InvalidJobStateException;
var FailureType;
(function (FailureType) {
    FailureType["ConfigurationError"] = "ConfigurationError";
    FailureType["JobFailed"] = "JobFailed";
    FailureType["PermissionError"] = "PermissionError";
    FailureType["RevisionOutOfSync"] = "RevisionOutOfSync";
    FailureType["RevisionUnavailable"] = "RevisionUnavailable";
    FailureType["SystemUnavailable"] = "SystemUnavailable";
})(FailureType = exports.FailureType || (exports.FailureType = {}));
class OutputVariablesSizeExceededException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "OutputVariablesSizeExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "OutputVariablesSizeExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OutputVariablesSizeExceededException.prototype);
    }
}
exports.OutputVariablesSizeExceededException = OutputVariablesSizeExceededException;
class InvalidWebhookAuthenticationParametersException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidWebhookAuthenticationParametersException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidWebhookAuthenticationParametersException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidWebhookAuthenticationParametersException.prototype);
    }
}
exports.InvalidWebhookAuthenticationParametersException = InvalidWebhookAuthenticationParametersException;
class InvalidWebhookFilterPatternException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "InvalidWebhookFilterPatternException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidWebhookFilterPatternException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidWebhookFilterPatternException.prototype);
    }
}
exports.InvalidWebhookFilterPatternException = InvalidWebhookFilterPatternException;
class ConflictException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
exports.ConflictException = ConflictException;
class NotLatestPipelineExecutionException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "NotLatestPipelineExecutionException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotLatestPipelineExecutionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotLatestPipelineExecutionException.prototype);
    }
}
exports.NotLatestPipelineExecutionException = NotLatestPipelineExecutionException;
var StageRetryMode;
(function (StageRetryMode) {
    StageRetryMode["FAILED_ACTIONS"] = "FAILED_ACTIONS";
})(StageRetryMode = exports.StageRetryMode || (exports.StageRetryMode = {}));
class StageNotRetryableException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "StageNotRetryableException",
            $fault: "client",
            ...opts,
        });
        this.name = "StageNotRetryableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, StageNotRetryableException.prototype);
    }
}
exports.StageNotRetryableException = StageNotRetryableException;
class DuplicatedStopRequestException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "DuplicatedStopRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicatedStopRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicatedStopRequestException.prototype);
    }
}
exports.DuplicatedStopRequestException = DuplicatedStopRequestException;
class PipelineExecutionNotStoppableException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "PipelineExecutionNotStoppableException",
            $fault: "client",
            ...opts,
        });
        this.name = "PipelineExecutionNotStoppableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PipelineExecutionNotStoppableException.prototype);
    }
}
exports.PipelineExecutionNotStoppableException = PipelineExecutionNotStoppableException;
class RequestFailedException extends CodePipelineServiceException_1.CodePipelineServiceException {
    constructor(opts) {
        super({
            name: "RequestFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestFailedException.prototype);
    }
}
exports.RequestFailedException = RequestFailedException;
const AcknowledgeJobInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcknowledgeJobInputFilterSensitiveLog = AcknowledgeJobInputFilterSensitiveLog;
const AcknowledgeJobOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcknowledgeJobOutputFilterSensitiveLog = AcknowledgeJobOutputFilterSensitiveLog;
const AcknowledgeThirdPartyJobInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcknowledgeThirdPartyJobInputFilterSensitiveLog = AcknowledgeThirdPartyJobInputFilterSensitiveLog;
const AcknowledgeThirdPartyJobOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcknowledgeThirdPartyJobOutputFilterSensitiveLog = AcknowledgeThirdPartyJobOutputFilterSensitiveLog;
const ActionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionConfigurationFilterSensitiveLog = ActionConfigurationFilterSensitiveLog;
const ActionConfigurationPropertyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionConfigurationPropertyFilterSensitiveLog = ActionConfigurationPropertyFilterSensitiveLog;
const ActionContextFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionContextFilterSensitiveLog = ActionContextFilterSensitiveLog;
const ActionTypeIdFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeIdFilterSensitiveLog = ActionTypeIdFilterSensitiveLog;
const InputArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InputArtifactFilterSensitiveLog = InputArtifactFilterSensitiveLog;
const OutputArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OutputArtifactFilterSensitiveLog = OutputArtifactFilterSensitiveLog;
const ActionDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionDeclarationFilterSensitiveLog = ActionDeclarationFilterSensitiveLog;
const ErrorDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ErrorDetailsFilterSensitiveLog = ErrorDetailsFilterSensitiveLog;
const ActionExecutionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionExecutionFilterSensitiveLog = ActionExecutionFilterSensitiveLog;
const S3LocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3LocationFilterSensitiveLog = S3LocationFilterSensitiveLog;
const ArtifactDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArtifactDetailFilterSensitiveLog = ArtifactDetailFilterSensitiveLog;
const ActionExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionExecutionInputFilterSensitiveLog = ActionExecutionInputFilterSensitiveLog;
const ActionExecutionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionExecutionResultFilterSensitiveLog = ActionExecutionResultFilterSensitiveLog;
const ActionExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionExecutionOutputFilterSensitiveLog = ActionExecutionOutputFilterSensitiveLog;
const ActionExecutionDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionExecutionDetailFilterSensitiveLog = ActionExecutionDetailFilterSensitiveLog;
const ActionExecutionFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionExecutionFilterFilterSensitiveLog = ActionExecutionFilterFilterSensitiveLog;
const ActionRevisionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionRevisionFilterSensitiveLog = ActionRevisionFilterSensitiveLog;
const ActionStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionStateFilterSensitiveLog = ActionStateFilterSensitiveLog;
const ArtifactDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArtifactDetailsFilterSensitiveLog = ArtifactDetailsFilterSensitiveLog;
const ActionTypeSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeSettingsFilterSensitiveLog = ActionTypeSettingsFilterSensitiveLog;
const ActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeFilterSensitiveLog = ActionTypeFilterSensitiveLog;
const ActionTypeArtifactDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeArtifactDetailsFilterSensitiveLog = ActionTypeArtifactDetailsFilterSensitiveLog;
const JobWorkerExecutorConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.JobWorkerExecutorConfigurationFilterSensitiveLog = JobWorkerExecutorConfigurationFilterSensitiveLog;
const LambdaExecutorConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LambdaExecutorConfigurationFilterSensitiveLog = LambdaExecutorConfigurationFilterSensitiveLog;
const ExecutorConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExecutorConfigurationFilterSensitiveLog = ExecutorConfigurationFilterSensitiveLog;
const ActionTypeExecutorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeExecutorFilterSensitiveLog = ActionTypeExecutorFilterSensitiveLog;
const ActionTypeIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeIdentifierFilterSensitiveLog = ActionTypeIdentifierFilterSensitiveLog;
const ActionTypePermissionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypePermissionsFilterSensitiveLog = ActionTypePermissionsFilterSensitiveLog;
const ActionTypePropertyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypePropertyFilterSensitiveLog = ActionTypePropertyFilterSensitiveLog;
const ActionTypeUrlsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeUrlsFilterSensitiveLog = ActionTypeUrlsFilterSensitiveLog;
const ActionTypeDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionTypeDeclarationFilterSensitiveLog = ActionTypeDeclarationFilterSensitiveLog;
const ApprovalResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ApprovalResultFilterSensitiveLog = ApprovalResultFilterSensitiveLog;
const S3ArtifactLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3ArtifactLocationFilterSensitiveLog = S3ArtifactLocationFilterSensitiveLog;
const ArtifactLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArtifactLocationFilterSensitiveLog = ArtifactLocationFilterSensitiveLog;
const ArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArtifactFilterSensitiveLog = ArtifactFilterSensitiveLog;
const ArtifactRevisionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArtifactRevisionFilterSensitiveLog = ArtifactRevisionFilterSensitiveLog;
const EncryptionKeyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EncryptionKeyFilterSensitiveLog = EncryptionKeyFilterSensitiveLog;
const ArtifactStoreFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArtifactStoreFilterSensitiveLog = ArtifactStoreFilterSensitiveLog;
const AWSSessionCredentialsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.accessKeyId && { accessKeyId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.AWSSessionCredentialsFilterSensitiveLog = AWSSessionCredentialsFilterSensitiveLog;
const BlockerDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BlockerDeclarationFilterSensitiveLog = BlockerDeclarationFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const CreateCustomActionTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCustomActionTypeInputFilterSensitiveLog = CreateCustomActionTypeInputFilterSensitiveLog;
const CreateCustomActionTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCustomActionTypeOutputFilterSensitiveLog = CreateCustomActionTypeOutputFilterSensitiveLog;
const StageDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StageDeclarationFilterSensitiveLog = StageDeclarationFilterSensitiveLog;
const PipelineDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PipelineDeclarationFilterSensitiveLog = PipelineDeclarationFilterSensitiveLog;
const CreatePipelineInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePipelineInputFilterSensitiveLog = CreatePipelineInputFilterSensitiveLog;
const CreatePipelineOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePipelineOutputFilterSensitiveLog = CreatePipelineOutputFilterSensitiveLog;
const DeleteCustomActionTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCustomActionTypeInputFilterSensitiveLog = DeleteCustomActionTypeInputFilterSensitiveLog;
const DeletePipelineInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePipelineInputFilterSensitiveLog = DeletePipelineInputFilterSensitiveLog;
const DeleteWebhookInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteWebhookInputFilterSensitiveLog = DeleteWebhookInputFilterSensitiveLog;
const DeleteWebhookOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteWebhookOutputFilterSensitiveLog = DeleteWebhookOutputFilterSensitiveLog;
const DeregisterWebhookWithThirdPartyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeregisterWebhookWithThirdPartyInputFilterSensitiveLog = DeregisterWebhookWithThirdPartyInputFilterSensitiveLog;
const DeregisterWebhookWithThirdPartyOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeregisterWebhookWithThirdPartyOutputFilterSensitiveLog = DeregisterWebhookWithThirdPartyOutputFilterSensitiveLog;
const DisableStageTransitionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableStageTransitionInputFilterSensitiveLog = DisableStageTransitionInputFilterSensitiveLog;
const EnableStageTransitionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableStageTransitionInputFilterSensitiveLog = EnableStageTransitionInputFilterSensitiveLog;
const GetActionTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetActionTypeInputFilterSensitiveLog = GetActionTypeInputFilterSensitiveLog;
const GetActionTypeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetActionTypeOutputFilterSensitiveLog = GetActionTypeOutputFilterSensitiveLog;
const GetJobDetailsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetJobDetailsInputFilterSensitiveLog = GetJobDetailsInputFilterSensitiveLog;
const StageContextFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StageContextFilterSensitiveLog = StageContextFilterSensitiveLog;
const PipelineContextFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PipelineContextFilterSensitiveLog = PipelineContextFilterSensitiveLog;
const JobDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.artifactCredentials && { artifactCredentials: smithy_client_1.SENSITIVE_STRING }),
});
exports.JobDataFilterSensitiveLog = JobDataFilterSensitiveLog;
const JobDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: (0, exports.JobDataFilterSensitiveLog)(obj.data) }),
});
exports.JobDetailsFilterSensitiveLog = JobDetailsFilterSensitiveLog;
const GetJobDetailsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.jobDetails && { jobDetails: (0, exports.JobDetailsFilterSensitiveLog)(obj.jobDetails) }),
});
exports.GetJobDetailsOutputFilterSensitiveLog = GetJobDetailsOutputFilterSensitiveLog;
const GetPipelineInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPipelineInputFilterSensitiveLog = GetPipelineInputFilterSensitiveLog;
const PipelineMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PipelineMetadataFilterSensitiveLog = PipelineMetadataFilterSensitiveLog;
const GetPipelineOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPipelineOutputFilterSensitiveLog = GetPipelineOutputFilterSensitiveLog;
const GetPipelineExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPipelineExecutionInputFilterSensitiveLog = GetPipelineExecutionInputFilterSensitiveLog;
const PipelineExecutionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PipelineExecutionFilterSensitiveLog = PipelineExecutionFilterSensitiveLog;
const GetPipelineExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPipelineExecutionOutputFilterSensitiveLog = GetPipelineExecutionOutputFilterSensitiveLog;
const GetPipelineStateInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPipelineStateInputFilterSensitiveLog = GetPipelineStateInputFilterSensitiveLog;
const StageExecutionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StageExecutionFilterSensitiveLog = StageExecutionFilterSensitiveLog;
const TransitionStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TransitionStateFilterSensitiveLog = TransitionStateFilterSensitiveLog;
const StageStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StageStateFilterSensitiveLog = StageStateFilterSensitiveLog;
const GetPipelineStateOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPipelineStateOutputFilterSensitiveLog = GetPipelineStateOutputFilterSensitiveLog;
const GetThirdPartyJobDetailsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetThirdPartyJobDetailsInputFilterSensitiveLog = GetThirdPartyJobDetailsInputFilterSensitiveLog;
const ThirdPartyJobDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.artifactCredentials && { artifactCredentials: smithy_client_1.SENSITIVE_STRING }),
});
exports.ThirdPartyJobDataFilterSensitiveLog = ThirdPartyJobDataFilterSensitiveLog;
const ThirdPartyJobDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: (0, exports.ThirdPartyJobDataFilterSensitiveLog)(obj.data) }),
});
exports.ThirdPartyJobDetailsFilterSensitiveLog = ThirdPartyJobDetailsFilterSensitiveLog;
const GetThirdPartyJobDetailsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.jobDetails && { jobDetails: (0, exports.ThirdPartyJobDetailsFilterSensitiveLog)(obj.jobDetails) }),
});
exports.GetThirdPartyJobDetailsOutputFilterSensitiveLog = GetThirdPartyJobDetailsOutputFilterSensitiveLog;
const ListActionExecutionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListActionExecutionsInputFilterSensitiveLog = ListActionExecutionsInputFilterSensitiveLog;
const ListActionExecutionsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListActionExecutionsOutputFilterSensitiveLog = ListActionExecutionsOutputFilterSensitiveLog;
const ListActionTypesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListActionTypesInputFilterSensitiveLog = ListActionTypesInputFilterSensitiveLog;
const ListActionTypesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListActionTypesOutputFilterSensitiveLog = ListActionTypesOutputFilterSensitiveLog;
const ListPipelineExecutionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListPipelineExecutionsInputFilterSensitiveLog = ListPipelineExecutionsInputFilterSensitiveLog;
const SourceRevisionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SourceRevisionFilterSensitiveLog = SourceRevisionFilterSensitiveLog;
const StopExecutionTriggerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopExecutionTriggerFilterSensitiveLog = StopExecutionTriggerFilterSensitiveLog;
const ExecutionTriggerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExecutionTriggerFilterSensitiveLog = ExecutionTriggerFilterSensitiveLog;
const PipelineExecutionSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PipelineExecutionSummaryFilterSensitiveLog = PipelineExecutionSummaryFilterSensitiveLog;
const ListPipelineExecutionsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListPipelineExecutionsOutputFilterSensitiveLog = ListPipelineExecutionsOutputFilterSensitiveLog;
const ListPipelinesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListPipelinesInputFilterSensitiveLog = ListPipelinesInputFilterSensitiveLog;
const PipelineSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PipelineSummaryFilterSensitiveLog = PipelineSummaryFilterSensitiveLog;
const ListPipelinesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListPipelinesOutputFilterSensitiveLog = ListPipelinesOutputFilterSensitiveLog;
const ListTagsForResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceInputFilterSensitiveLog = ListTagsForResourceInputFilterSensitiveLog;
const ListTagsForResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceOutputFilterSensitiveLog = ListTagsForResourceOutputFilterSensitiveLog;
const ListWebhooksInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListWebhooksInputFilterSensitiveLog = ListWebhooksInputFilterSensitiveLog;
const WebhookAuthConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.WebhookAuthConfigurationFilterSensitiveLog = WebhookAuthConfigurationFilterSensitiveLog;
const WebhookFilterRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.WebhookFilterRuleFilterSensitiveLog = WebhookFilterRuleFilterSensitiveLog;
const WebhookDefinitionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.WebhookDefinitionFilterSensitiveLog = WebhookDefinitionFilterSensitiveLog;
const ListWebhookItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListWebhookItemFilterSensitiveLog = ListWebhookItemFilterSensitiveLog;
const ListWebhooksOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListWebhooksOutputFilterSensitiveLog = ListWebhooksOutputFilterSensitiveLog;
const PollForJobsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PollForJobsInputFilterSensitiveLog = PollForJobsInputFilterSensitiveLog;
const JobFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.data && { data: (0, exports.JobDataFilterSensitiveLog)(obj.data) }),
});
exports.JobFilterSensitiveLog = JobFilterSensitiveLog;
const PollForJobsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.jobs && { jobs: obj.jobs.map((item) => (0, exports.JobFilterSensitiveLog)(item)) }),
});
exports.PollForJobsOutputFilterSensitiveLog = PollForJobsOutputFilterSensitiveLog;
const PollForThirdPartyJobsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PollForThirdPartyJobsInputFilterSensitiveLog = PollForThirdPartyJobsInputFilterSensitiveLog;
const ThirdPartyJobFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ThirdPartyJobFilterSensitiveLog = ThirdPartyJobFilterSensitiveLog;
const PollForThirdPartyJobsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PollForThirdPartyJobsOutputFilterSensitiveLog = PollForThirdPartyJobsOutputFilterSensitiveLog;
const PutActionRevisionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutActionRevisionInputFilterSensitiveLog = PutActionRevisionInputFilterSensitiveLog;
const PutActionRevisionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutActionRevisionOutputFilterSensitiveLog = PutActionRevisionOutputFilterSensitiveLog;
const PutApprovalResultInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutApprovalResultInputFilterSensitiveLog = PutApprovalResultInputFilterSensitiveLog;
const PutApprovalResultOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutApprovalResultOutputFilterSensitiveLog = PutApprovalResultOutputFilterSensitiveLog;
const FailureDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailureDetailsFilterSensitiveLog = FailureDetailsFilterSensitiveLog;
const PutJobFailureResultInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutJobFailureResultInputFilterSensitiveLog = PutJobFailureResultInputFilterSensitiveLog;
const CurrentRevisionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CurrentRevisionFilterSensitiveLog = CurrentRevisionFilterSensitiveLog;
const ExecutionDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExecutionDetailsFilterSensitiveLog = ExecutionDetailsFilterSensitiveLog;
const PutJobSuccessResultInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutJobSuccessResultInputFilterSensitiveLog = PutJobSuccessResultInputFilterSensitiveLog;
const PutThirdPartyJobFailureResultInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutThirdPartyJobFailureResultInputFilterSensitiveLog = PutThirdPartyJobFailureResultInputFilterSensitiveLog;
const PutThirdPartyJobSuccessResultInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutThirdPartyJobSuccessResultInputFilterSensitiveLog = PutThirdPartyJobSuccessResultInputFilterSensitiveLog;
const PutWebhookInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutWebhookInputFilterSensitiveLog = PutWebhookInputFilterSensitiveLog;
const PutWebhookOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutWebhookOutputFilterSensitiveLog = PutWebhookOutputFilterSensitiveLog;
const RegisterWebhookWithThirdPartyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegisterWebhookWithThirdPartyInputFilterSensitiveLog = RegisterWebhookWithThirdPartyInputFilterSensitiveLog;
const RegisterWebhookWithThirdPartyOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RegisterWebhookWithThirdPartyOutputFilterSensitiveLog = RegisterWebhookWithThirdPartyOutputFilterSensitiveLog;
const RetryStageExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RetryStageExecutionInputFilterSensitiveLog = RetryStageExecutionInputFilterSensitiveLog;
const RetryStageExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RetryStageExecutionOutputFilterSensitiveLog = RetryStageExecutionOutputFilterSensitiveLog;
const StartPipelineExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartPipelineExecutionInputFilterSensitiveLog = StartPipelineExecutionInputFilterSensitiveLog;
const StartPipelineExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartPipelineExecutionOutputFilterSensitiveLog = StartPipelineExecutionOutputFilterSensitiveLog;
const StopPipelineExecutionInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopPipelineExecutionInputFilterSensitiveLog = StopPipelineExecutionInputFilterSensitiveLog;
const StopPipelineExecutionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopPipelineExecutionOutputFilterSensitiveLog = StopPipelineExecutionOutputFilterSensitiveLog;
const TagResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceInputFilterSensitiveLog = TagResourceInputFilterSensitiveLog;
const TagResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceOutputFilterSensitiveLog = TagResourceOutputFilterSensitiveLog;
const UntagResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceInputFilterSensitiveLog = UntagResourceInputFilterSensitiveLog;
const UntagResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceOutputFilterSensitiveLog = UntagResourceOutputFilterSensitiveLog;
const UpdateActionTypeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateActionTypeInputFilterSensitiveLog = UpdateActionTypeInputFilterSensitiveLog;
const UpdatePipelineInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdatePipelineInputFilterSensitiveLog = UpdatePipelineInputFilterSensitiveLog;
const UpdatePipelineOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdatePipelineOutputFilterSensitiveLog = UpdatePipelineOutputFilterSensitiveLog;
