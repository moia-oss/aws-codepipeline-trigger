import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { CodeBuildServiceException as __BaseException } from "./CodeBuildServiceException";
export class AccountLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccountLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccountLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccountLimitExceededException.prototype);
    }
}
export var ArtifactNamespace;
(function (ArtifactNamespace) {
    ArtifactNamespace["BUILD_ID"] = "BUILD_ID";
    ArtifactNamespace["NONE"] = "NONE";
})(ArtifactNamespace || (ArtifactNamespace = {}));
export var ArtifactPackaging;
(function (ArtifactPackaging) {
    ArtifactPackaging["NONE"] = "NONE";
    ArtifactPackaging["ZIP"] = "ZIP";
})(ArtifactPackaging || (ArtifactPackaging = {}));
export var ArtifactsType;
(function (ArtifactsType) {
    ArtifactsType["CODEPIPELINE"] = "CODEPIPELINE";
    ArtifactsType["NO_ARTIFACTS"] = "NO_ARTIFACTS";
    ArtifactsType["S3"] = "S3";
})(ArtifactsType || (ArtifactsType = {}));
export var AuthType;
(function (AuthType) {
    AuthType["BASIC_AUTH"] = "BASIC_AUTH";
    AuthType["OAUTH"] = "OAUTH";
    AuthType["PERSONAL_ACCESS_TOKEN"] = "PERSONAL_ACCESS_TOKEN";
})(AuthType || (AuthType = {}));
export class InvalidInputException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidInputException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidInputException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidInputException.prototype);
    }
}
export var BucketOwnerAccess;
(function (BucketOwnerAccess) {
    BucketOwnerAccess["FULL"] = "FULL";
    BucketOwnerAccess["NONE"] = "NONE";
    BucketOwnerAccess["READ_ONLY"] = "READ_ONLY";
})(BucketOwnerAccess || (BucketOwnerAccess = {}));
export var BatchReportModeType;
(function (BatchReportModeType) {
    BatchReportModeType["REPORT_AGGREGATED_BATCH"] = "REPORT_AGGREGATED_BATCH";
    BatchReportModeType["REPORT_INDIVIDUAL_BUILDS"] = "REPORT_INDIVIDUAL_BUILDS";
})(BatchReportModeType || (BatchReportModeType = {}));
export var StatusType;
(function (StatusType) {
    StatusType["FAILED"] = "FAILED";
    StatusType["FAULT"] = "FAULT";
    StatusType["IN_PROGRESS"] = "IN_PROGRESS";
    StatusType["STOPPED"] = "STOPPED";
    StatusType["SUCCEEDED"] = "SUCCEEDED";
    StatusType["TIMED_OUT"] = "TIMED_OUT";
})(StatusType || (StatusType = {}));
export var CacheMode;
(function (CacheMode) {
    CacheMode["LOCAL_CUSTOM_CACHE"] = "LOCAL_CUSTOM_CACHE";
    CacheMode["LOCAL_DOCKER_LAYER_CACHE"] = "LOCAL_DOCKER_LAYER_CACHE";
    CacheMode["LOCAL_SOURCE_CACHE"] = "LOCAL_SOURCE_CACHE";
})(CacheMode || (CacheMode = {}));
export var CacheType;
(function (CacheType) {
    CacheType["LOCAL"] = "LOCAL";
    CacheType["NO_CACHE"] = "NO_CACHE";
    CacheType["S3"] = "S3";
})(CacheType || (CacheType = {}));
export var ComputeType;
(function (ComputeType) {
    ComputeType["BUILD_GENERAL1_2XLARGE"] = "BUILD_GENERAL1_2XLARGE";
    ComputeType["BUILD_GENERAL1_LARGE"] = "BUILD_GENERAL1_LARGE";
    ComputeType["BUILD_GENERAL1_MEDIUM"] = "BUILD_GENERAL1_MEDIUM";
    ComputeType["BUILD_GENERAL1_SMALL"] = "BUILD_GENERAL1_SMALL";
})(ComputeType || (ComputeType = {}));
export var EnvironmentVariableType;
(function (EnvironmentVariableType) {
    EnvironmentVariableType["PARAMETER_STORE"] = "PARAMETER_STORE";
    EnvironmentVariableType["PLAINTEXT"] = "PLAINTEXT";
    EnvironmentVariableType["SECRETS_MANAGER"] = "SECRETS_MANAGER";
})(EnvironmentVariableType || (EnvironmentVariableType = {}));
export var ImagePullCredentialsType;
(function (ImagePullCredentialsType) {
    ImagePullCredentialsType["CODEBUILD"] = "CODEBUILD";
    ImagePullCredentialsType["SERVICE_ROLE"] = "SERVICE_ROLE";
})(ImagePullCredentialsType || (ImagePullCredentialsType = {}));
export var CredentialProviderType;
(function (CredentialProviderType) {
    CredentialProviderType["SECRETS_MANAGER"] = "SECRETS_MANAGER";
})(CredentialProviderType || (CredentialProviderType = {}));
export var EnvironmentType;
(function (EnvironmentType) {
    EnvironmentType["ARM_CONTAINER"] = "ARM_CONTAINER";
    EnvironmentType["LINUX_CONTAINER"] = "LINUX_CONTAINER";
    EnvironmentType["LINUX_GPU_CONTAINER"] = "LINUX_GPU_CONTAINER";
    EnvironmentType["WINDOWS_CONTAINER"] = "WINDOWS_CONTAINER";
    EnvironmentType["WINDOWS_SERVER_2019_CONTAINER"] = "WINDOWS_SERVER_2019_CONTAINER";
})(EnvironmentType || (EnvironmentType = {}));
export var FileSystemType;
(function (FileSystemType) {
    FileSystemType["EFS"] = "EFS";
})(FileSystemType || (FileSystemType = {}));
export var LogsConfigStatusType;
(function (LogsConfigStatusType) {
    LogsConfigStatusType["DISABLED"] = "DISABLED";
    LogsConfigStatusType["ENABLED"] = "ENABLED";
})(LogsConfigStatusType || (LogsConfigStatusType = {}));
export var BuildBatchPhaseType;
(function (BuildBatchPhaseType) {
    BuildBatchPhaseType["COMBINE_ARTIFACTS"] = "COMBINE_ARTIFACTS";
    BuildBatchPhaseType["DOWNLOAD_BATCHSPEC"] = "DOWNLOAD_BATCHSPEC";
    BuildBatchPhaseType["FAILED"] = "FAILED";
    BuildBatchPhaseType["IN_PROGRESS"] = "IN_PROGRESS";
    BuildBatchPhaseType["STOPPED"] = "STOPPED";
    BuildBatchPhaseType["SUBMITTED"] = "SUBMITTED";
    BuildBatchPhaseType["SUCCEEDED"] = "SUCCEEDED";
})(BuildBatchPhaseType || (BuildBatchPhaseType = {}));
export var SourceAuthType;
(function (SourceAuthType) {
    SourceAuthType["OAUTH"] = "OAUTH";
})(SourceAuthType || (SourceAuthType = {}));
export var SourceType;
(function (SourceType) {
    SourceType["BITBUCKET"] = "BITBUCKET";
    SourceType["CODECOMMIT"] = "CODECOMMIT";
    SourceType["CODEPIPELINE"] = "CODEPIPELINE";
    SourceType["GITHUB"] = "GITHUB";
    SourceType["GITHUB_ENTERPRISE"] = "GITHUB_ENTERPRISE";
    SourceType["NO_SOURCE"] = "NO_SOURCE";
    SourceType["S3"] = "S3";
})(SourceType || (SourceType = {}));
export var BuildPhaseType;
(function (BuildPhaseType) {
    BuildPhaseType["BUILD"] = "BUILD";
    BuildPhaseType["COMPLETED"] = "COMPLETED";
    BuildPhaseType["DOWNLOAD_SOURCE"] = "DOWNLOAD_SOURCE";
    BuildPhaseType["FINALIZING"] = "FINALIZING";
    BuildPhaseType["INSTALL"] = "INSTALL";
    BuildPhaseType["POST_BUILD"] = "POST_BUILD";
    BuildPhaseType["PRE_BUILD"] = "PRE_BUILD";
    BuildPhaseType["PROVISIONING"] = "PROVISIONING";
    BuildPhaseType["QUEUED"] = "QUEUED";
    BuildPhaseType["SUBMITTED"] = "SUBMITTED";
    BuildPhaseType["UPLOAD_ARTIFACTS"] = "UPLOAD_ARTIFACTS";
})(BuildPhaseType || (BuildPhaseType = {}));
export var ProjectVisibilityType;
(function (ProjectVisibilityType) {
    ProjectVisibilityType["PRIVATE"] = "PRIVATE";
    ProjectVisibilityType["PUBLIC_READ"] = "PUBLIC_READ";
})(ProjectVisibilityType || (ProjectVisibilityType = {}));
export var WebhookBuildType;
(function (WebhookBuildType) {
    WebhookBuildType["BUILD"] = "BUILD";
    WebhookBuildType["BUILD_BATCH"] = "BUILD_BATCH";
})(WebhookBuildType || (WebhookBuildType = {}));
export var WebhookFilterType;
(function (WebhookFilterType) {
    WebhookFilterType["ACTOR_ACCOUNT_ID"] = "ACTOR_ACCOUNT_ID";
    WebhookFilterType["BASE_REF"] = "BASE_REF";
    WebhookFilterType["COMMIT_MESSAGE"] = "COMMIT_MESSAGE";
    WebhookFilterType["EVENT"] = "EVENT";
    WebhookFilterType["FILE_PATH"] = "FILE_PATH";
    WebhookFilterType["HEAD_REF"] = "HEAD_REF";
})(WebhookFilterType || (WebhookFilterType = {}));
export var ReportExportConfigType;
(function (ReportExportConfigType) {
    ReportExportConfigType["NO_EXPORT"] = "NO_EXPORT";
    ReportExportConfigType["S3"] = "S3";
})(ReportExportConfigType || (ReportExportConfigType = {}));
export var ReportPackagingType;
(function (ReportPackagingType) {
    ReportPackagingType["NONE"] = "NONE";
    ReportPackagingType["ZIP"] = "ZIP";
})(ReportPackagingType || (ReportPackagingType = {}));
export var ReportGroupStatusType;
(function (ReportGroupStatusType) {
    ReportGroupStatusType["ACTIVE"] = "ACTIVE";
    ReportGroupStatusType["DELETING"] = "DELETING";
})(ReportGroupStatusType || (ReportGroupStatusType = {}));
export var ReportType;
(function (ReportType) {
    ReportType["CODE_COVERAGE"] = "CODE_COVERAGE";
    ReportType["TEST"] = "TEST";
})(ReportType || (ReportType = {}));
export var ReportStatusType;
(function (ReportStatusType) {
    ReportStatusType["DELETING"] = "DELETING";
    ReportStatusType["FAILED"] = "FAILED";
    ReportStatusType["GENERATING"] = "GENERATING";
    ReportStatusType["INCOMPLETE"] = "INCOMPLETE";
    ReportStatusType["SUCCEEDED"] = "SUCCEEDED";
})(ReportStatusType || (ReportStatusType = {}));
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
    }
}
export class OAuthProviderException extends __BaseException {
    constructor(opts) {
        super({
            name: "OAuthProviderException",
            $fault: "client",
            ...opts,
        });
        this.name = "OAuthProviderException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OAuthProviderException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export var ReportCodeCoverageSortByType;
(function (ReportCodeCoverageSortByType) {
    ReportCodeCoverageSortByType["FILE_PATH"] = "FILE_PATH";
    ReportCodeCoverageSortByType["LINE_COVERAGE_PERCENTAGE"] = "LINE_COVERAGE_PERCENTAGE";
})(ReportCodeCoverageSortByType || (ReportCodeCoverageSortByType = {}));
export var SortOrderType;
(function (SortOrderType) {
    SortOrderType["ASCENDING"] = "ASCENDING";
    SortOrderType["DESCENDING"] = "DESCENDING";
})(SortOrderType || (SortOrderType = {}));
export var ReportGroupTrendFieldType;
(function (ReportGroupTrendFieldType) {
    ReportGroupTrendFieldType["BRANCHES_COVERED"] = "BRANCHES_COVERED";
    ReportGroupTrendFieldType["BRANCHES_MISSED"] = "BRANCHES_MISSED";
    ReportGroupTrendFieldType["BRANCH_COVERAGE"] = "BRANCH_COVERAGE";
    ReportGroupTrendFieldType["DURATION"] = "DURATION";
    ReportGroupTrendFieldType["LINES_COVERED"] = "LINES_COVERED";
    ReportGroupTrendFieldType["LINES_MISSED"] = "LINES_MISSED";
    ReportGroupTrendFieldType["LINE_COVERAGE"] = "LINE_COVERAGE";
    ReportGroupTrendFieldType["PASS_RATE"] = "PASS_RATE";
    ReportGroupTrendFieldType["TOTAL"] = "TOTAL";
})(ReportGroupTrendFieldType || (ReportGroupTrendFieldType = {}));
export var ServerType;
(function (ServerType) {
    ServerType["BITBUCKET"] = "BITBUCKET";
    ServerType["GITHUB"] = "GITHUB";
    ServerType["GITHUB_ENTERPRISE"] = "GITHUB_ENTERPRISE";
})(ServerType || (ServerType = {}));
export var LanguageType;
(function (LanguageType) {
    LanguageType["ANDROID"] = "ANDROID";
    LanguageType["BASE"] = "BASE";
    LanguageType["DOCKER"] = "DOCKER";
    LanguageType["DOTNET"] = "DOTNET";
    LanguageType["GOLANG"] = "GOLANG";
    LanguageType["JAVA"] = "JAVA";
    LanguageType["NODE_JS"] = "NODE_JS";
    LanguageType["PHP"] = "PHP";
    LanguageType["PYTHON"] = "PYTHON";
    LanguageType["RUBY"] = "RUBY";
})(LanguageType || (LanguageType = {}));
export var PlatformType;
(function (PlatformType) {
    PlatformType["AMAZON_LINUX"] = "AMAZON_LINUX";
    PlatformType["DEBIAN"] = "DEBIAN";
    PlatformType["UBUNTU"] = "UBUNTU";
    PlatformType["WINDOWS_SERVER"] = "WINDOWS_SERVER";
})(PlatformType || (PlatformType = {}));
export var ProjectSortByType;
(function (ProjectSortByType) {
    ProjectSortByType["CREATED_TIME"] = "CREATED_TIME";
    ProjectSortByType["LAST_MODIFIED_TIME"] = "LAST_MODIFIED_TIME";
    ProjectSortByType["NAME"] = "NAME";
})(ProjectSortByType || (ProjectSortByType = {}));
export var ReportGroupSortByType;
(function (ReportGroupSortByType) {
    ReportGroupSortByType["CREATED_TIME"] = "CREATED_TIME";
    ReportGroupSortByType["LAST_MODIFIED_TIME"] = "LAST_MODIFIED_TIME";
    ReportGroupSortByType["NAME"] = "NAME";
})(ReportGroupSortByType || (ReportGroupSortByType = {}));
export var SharedResourceSortByType;
(function (SharedResourceSortByType) {
    SharedResourceSortByType["ARN"] = "ARN";
    SharedResourceSortByType["MODIFIED_TIME"] = "MODIFIED_TIME";
})(SharedResourceSortByType || (SharedResourceSortByType = {}));
export var RetryBuildBatchType;
(function (RetryBuildBatchType) {
    RetryBuildBatchType["RETRY_ALL_BUILDS"] = "RETRY_ALL_BUILDS";
    RetryBuildBatchType["RETRY_FAILED_BUILDS"] = "RETRY_FAILED_BUILDS";
})(RetryBuildBatchType || (RetryBuildBatchType = {}));
export const BatchDeleteBuildsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildNotDeletedFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchDeleteBuildsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetBuildBatchesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildArtifactsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchRestrictionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectBuildBatchConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResolvedArtifactFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectCacheFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnvironmentVariableFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegistryCredentialFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectEnvironmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectFileSystemLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudWatchLogsConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3LogsConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LogsConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PhaseContextFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildBatchPhaseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SourceAuthFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildStatusConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GitSubmodulesConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectSourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectSourceVersionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpcConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildBatchFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetBuildBatchesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetBuildsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DebugSessionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExportedEnvironmentVariableFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LogsLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildPhaseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetBuildsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetProjectsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectArtifactsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectBadgeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const WebhookFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const WebhookFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProjectFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetProjectsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetReportGroupsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3ReportExportConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReportExportConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReportGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetReportGroupsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetReportsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CodeCoverageReportSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestReportSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReportFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BatchGetReportsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BuildBatchFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProjectOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateReportGroupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateReportGroupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateWebhookInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateWebhookOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteBuildBatchInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteBuildBatchOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteProjectOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteReportInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteReportOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteReportGroupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteReportGroupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteResourcePolicyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteResourcePolicyOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSourceCredentialsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSourceCredentialsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteWebhookInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteWebhookOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeCodeCoveragesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CodeCoverageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeCodeCoveragesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestCaseFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTestCasesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TestCaseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTestCasesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetReportGroupTrendInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReportWithRawDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReportGroupTrendStatsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetReportGroupTrendOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetResourcePolicyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GetResourcePolicyOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ImportSourceCredentialsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.token && { token: SENSITIVE_STRING }),
});
export const ImportSourceCredentialsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InvalidateProjectCacheInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InvalidateProjectCacheOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildBatchesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildBatchesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildBatchesForProjectInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildBatchesForProjectOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildsForProjectInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListBuildsForProjectOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCuratedEnvironmentImagesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnvironmentImageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnvironmentLanguageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnvironmentPlatformFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListCuratedEnvironmentImagesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListProjectsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListProjectsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListReportGroupsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListReportGroupsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReportFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListReportsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListReportsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListReportsForReportGroupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListReportsForReportGroupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSharedProjectsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSharedProjectsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSharedReportGroupsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSharedReportGroupsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSourceCredentialsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SourceCredentialsInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListSourceCredentialsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutResourcePolicyInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutResourcePolicyOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RetryBuildInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RetryBuildOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RetryBuildBatchInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RetryBuildBatchOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartBuildInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartBuildOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartBuildBatchInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartBuildBatchOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopBuildInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopBuildOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopBuildBatchInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopBuildBatchOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateProjectInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateProjectOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateProjectVisibilityInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateProjectVisibilityOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateReportGroupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateReportGroupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateWebhookInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateWebhookOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
